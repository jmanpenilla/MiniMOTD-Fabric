plugins {
    id 'fabric-loom' version '0.4.33'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    mavenLocal()
    jcenter()
    maven {
        name = 'sonatype-oss'
        url = 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    implementation 'net.kyori:adventure-platform-common:4.0.0-SNAPSHOT'
    implementation 'net.kyori:adventure-text-minimessage:3.0.0-SNAPSHOT'
    include 'net.kyori:adventure-text-minimessage:3.0.0-SNAPSHOT'
    implementation 'net.kyori:adventure-text-serializer-gson:4.0.0-SNAPSHOT'
    include 'net.kyori:adventure-text-serializer-gson:4.0.0-SNAPSHOT'
    implementation 'org.spongepowered:configurate-hocon:3.7'
    include 'org.spongepowered:configurate-hocon:3.7'
    implementation 'org.spongepowered:configurate-core:3.7'
    include 'org.spongepowered:configurate-core:3.7'
    implementation 'com.typesafe:config:1.4.0'
    include 'com.typesafe:config:1.4.0'

    modImplementation("net.kyori:adventure-platform-fabric:2.0-SNAPSHOT+4.0.0") {
        exclude(group: "com.google.code.gson", module: "gson")
    }
    include("net.kyori:adventure-platform-fabric:2.0-SNAPSHOT+4.0.0")
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

remapJar {

}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
